OpenFst - Release 1.5.1

OpenFst is a library for constructing, combining, optimizing, and searching
weighted finite-state transducers (FSTs).

REQUIREMENTS:
  This version is known to work under Linux using g++ (>= 4.7) and
  MacOS X using XCode (>= 5). It is expected to work wherever adequate POSIX
  (dlopen, ssize_t, basename), c99 (snprintf, strtoll, <stdint.h>), and C++11
  (<unordered_set>, <unordered_map>, <forward_list>) support is available.

INSTALLATION:
  Follow the generic GNU build system instructions in ./INSTALL.  We
  recommend configuring with --enable-static=no for faster compiles.

  Optional features:

  --enable-bin             Enable fst::script and command-line binaries (def: yes)
  --enable-compact-fsts    Enable all CompactFst extensions (def: no)
  --enable-compress        Enable compression extension (def: no)
  --enable-const-fsts      Enable all ConstFst extensions (def: no)
  --enable-far		   Enable FAR extensions (def: no)
  --enable-linear-fsts     Enable LinearTagger/ClassifierFst extensions (def: no)
  --enable-lookahead-fsts  Enable LookAheadFst extensions (def: no)
  --enable-mpdt            Enable MPDT extensions (def: no)
  --enable-ngram-fsts      Enable NGramFst extensions (def: no)
  --enable-pdt             Enable PDT extensions (def: no)
  --enable-python          Enable Python extensions (def: no)

  Configuring with --enable-bin=no gives very fast compiles, but
  excludes the command line utilities.

  Configuring with --enable-python will attempt to install the Python module
  to whichever 'site-packages' (or 'dist-packages', on Debian or Ubuntu)
  is found during configuration.

  The flag --with-libfstdir specifies where FST extensions should be
  installed; it defaults to ${libdir}/fst.

  Compiling with -Wall -Wno-sign-compare under g++ should give no
  warnings from this library.

USAGE:
  Assuming you've installed under the default /usr/local, the FST binaries are
  found on /usr/local/bin.

  To use in your own program, include <fst/fstlib.h> and compile with
  '-I /usr/local/include'. The compiler must support C++11 (for g++ add the
  flag "-std=c++11"). Link against /usr/local/lib/libfst.so and -ldl. Set your
  LD_LIBRARY_PATH (or equivalent) to contain /usr/local/lib. The linking is,
  by default, dynamic so that the Fst and Arc type DSO extensions can be used
  correctly if desired. Any extensions will be found under
  /usr/local/lib/fst or /usr/local/include/fst/extensions.

DOCUMENTATION:
  See www.openfst.org for general documentation.
  See ./NEWS for updates since the last release.
